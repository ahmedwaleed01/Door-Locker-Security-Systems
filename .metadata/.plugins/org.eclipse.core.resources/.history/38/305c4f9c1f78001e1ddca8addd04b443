/*
 * main.c
 *
 *
 * Author: ahmed waleed
 */

#include "keypad.h"
#include "LCD.h"
#include "std_types.h"
#include "uart.h"
#include "Timer.h"
#include "avr/io.h"
#include "util/delay.h"

#define  Check_Password              0xFF
#define  rotate_motor_CW             0xEF
#define  rotate_motor_ACW            0xDF
#define  Activate_Buzzer             0xBF
#define  GET_PASSWORD                0xAF
#define  send_first_pass             0x9F
#define  send_reEntered_pass         0x8F

uint8 CreateSystemPassword();
void MainOptions();
void ChangePassword();
void OpenDoor();
uint8 checkPasswordCorrection();
uint8 g_locking=0;
void motorCW_callback(void);
void motorhold_callback(void);
void motorACW_callback(void);
void Buzzer_Callback(void);

int main(void){
	/* Initlize LCD */
	LCD_init();
	/*
	 * Set configuration of Uart
	 * parity bit is disabled
	 * one bit stop
	 * character size 8
	 * baud rate =9600
	 * */
	Config_Uart config_uart={DISABLED,ONE_BIT,
			BIT_8,9600
	};

	UART_init(&config_uart);
	SREG=(1<<7);
	//	CreateSystemPassword();
	//	uint16 password=0;
	//
	//	_delay_ms(500);
	//	UART_sendByte(GET_PASSWORD);
	//	_delay_ms(100);
	//	password=UART_recieveByte()<<8;
	//	_delay_ms(10);
	//	password|=UART_recieveByte();
	//	uint8 check_password_creation=0;
	while(1){

		//		while(check_password_creation!=0){
		//			if(password==0)
		//			  check_password_creation=CreateSystemPassword();
		//		}

		MainOptions();


	}

}
/* create Password */
uint8 CreateSystemPassword(){
	uint8 check;
	do{
		uint8 i;
		uint16 re_enter=0;
		uint16 password=0;
		/*Display on lcd entering password  and move the cursor */
		LCD_clearScreen();
		LCD_displayString("Plz Enter Pass:");
		LCD_moveCursor(1,0);
		/*Ask user to enter Five number from Keypad as a password */
		for(i=0;i<5;i++){
			password=password*10+KEYPAD_getPressedKey();
			LCD_displayCharacter('*');
			_delay_ms(300);
		}
		/* clear the screen of lcd
		 * ask the user to re-enter password
		 * */
		LCD_clearScreen();
		LCD_displayString("Plz re-enter the");
		LCD_moveCursor(1,0);
		LCD_displayString("same Pass: ");
		for(i=0;i<5;i++){
			re_enter=re_enter*10+KEYPAD_getPressedKey();
			LCD_displayCharacter('*');
			_delay_ms(300);
		}
		/*
		 * send to Control_ECU the entered password
		 * and its re-entered password to check them
		 * */
		UART_sendByte(send_first_pass);
		_delay_ms(10);
		UART_sendByte(password>>8);
		_delay_ms(10);
		UART_sendByte(password&0x00ff);


		_delay_ms(10);
		UART_sendByte(re_enter>>8);
		_delay_ms(10);
		UART_sendByte(re_enter&0x00ff);
		_delay_ms(10);
		check=UART_recieveByte();

	}while(check==0);
	return check;

}
/* Main Options List */
void MainOptions(){
	/*
	 * display on LCD
	 * Get from user option to open door --> call function OpenDoor()
	 * or to change password -->call function changePassword()
	 * */
	uint8 option_value;
	LCD_clearScreen();
	LCD_displayString("+ : Open Door");
	LCD_moveCursor(1,0);
	LCD_displayString("- : Change Pass");

	option_value=KEYPAD_getPressedKey();
	_delay_ms(300);
	if(option_value=='+'){
		OpenDoor();
		while(g_locking==0);
		g_locking=0;
	}else if(option_value=='-'){
		ChangePassword();
	}

}
/*Change Password */
void ChangePassword(){
	/*ask user to enter old password and check its correction
	 * then call function create password
	 * */
	if(checkPasswordCorrection()){
		CreateSystemPassword();
	}
}
/* Open Door Function */
void OpenDoor(){
	/*
	 * Check the correctness of password then
	 * send to control_ECU to rotate motor clock wise
	 * and setup timer to count 15 sec and set callback function
	 * */
	//	if(checkPasswordCorrection()){
	_delay_ms(10);
	UART_sendByte(rotate_motor_CW);
	LCD_clearScreen();
	LCD_displayString("Door is Unlocking");

	/*
	 * set configuration of timer
	 * start value =0
	 * compare value = 39063  --> count 3 sec
	 * prescalar = 64
	 * mode of time is compare mode
	 * */
	Timer1_ConfigType config_timer1={0,24438,CLOCK_1024,CTC};
	Timer1_setCallBack(motorCW_callback);
	Timer1_init(&config_timer1);
	while(g_locking!=5);
	g_locking=0;
	//	}
}
/*Check password entered by user */
uint8 checkPasswordCorrection(){
	/*
	 * Ask user to enter password
	 * send the password to control_ECU to check the password in EEPROM memory
	 * recieve an checking correction from control_ECU correct or incorrect
	 * */
	uint8 RecievedValue;
	uint8 iterator_incorrect_password=0;
	do{
		LCD_clearScreen();
		LCD_displayString("Plz Enter Pass:");
		LCD_moveCursor(1,0);
		uint16 password=0;
		uint8 i;
		for(i=0;i<5;i++){
			password=password*10+KEYPAD_getPressedKey();
			LCD_displayCharacter('*');
			_delay_ms(300);
		}

		UART_sendByte(Check_Password);
		_delay_ms(10);
		UART_sendByte(password>>8);
		_delay_ms(10);
		UART_sendByte(password&0x00ff);

		RecievedValue=UART_recieveByte();
		if(RecievedValue==0)
			iterator_incorrect_password++;
	}while(iterator_incorrect_password<3 &&RecievedValue==0);

	if(iterator_incorrect_password==3){
		UART_sendByte(Activate_Buzzer);
		LCD_clearScreen();
		LCD_displayString("   ERROR     ");

		/*
		 * set configuration of timer
		 * start value =0
		 * compare value = 7500
		 * prescalar = 64
		 * mode of time is compare mode
		 * */
		Timer1_ConfigType config_timer1={0,375,CLOCK_64,CTC};
		Timer1_setCallBack(motorhold_callback);
		Timer1_init(&config_timer1);
	}
	return  RecievedValue;
}

void motorCW_callback(void){
	/*
	 * Disable Timer
	 * Clear Lcd screen
	 * display Door is Unlocking on lcd
	 * open timer to count 3 sec for holding motor
	 * set call back funtion after counting 3sec
	 * */

	g_locking++;
	if(g_locking==5){
		LCD_clearScreen();
		LCD_displayString("Door is Open");
		Timer1_deInit();
		_delay_ms(2000);
		/*
		 * set configuration of timer
		 * start value =0
		 * compare value = 375
		 * prescalar = 64
		 * mode of time is compare mode
		 * */
		Timer1_ConfigType config_timer1={0,375,CLOCK_64,CTC};
		Timer1_setCallBack(motorhold_callback);
		Timer1_init(&config_timer1);
	}

}
/*Call Back Function after the timer counts 3 secs to hold motor */
void motorhold_callback(void){
	/*
	 * Disable Timer
	 * Clear Lcd screen
	 * display Door is Unlocking on lcd
	 * open timer to count 15 sec
	 * set call back funtion after counting 15sec to make motor to rotate anti clock
	 * */
	Timer1_deInit();
	LCD_clearScreen();
	LCD_displayString("Door is locking");
	UART_sendByte(rotate_motor_ACW);

	/*
	 * set configuration of timer
	 * start value =0
	 * compare value = 1875
	 * prescalar = 64
	 * mode of time is compare mode
	 * */
	Timer1_ConfigType config_timer1={0,1875,CLOCK_64,CTC};
	Timer1_setCallBack(motorACW_callback);
	Timer1_init(&config_timer1);
}
/*Call Back Function after the timer counts 15 secs to rotate motor anti clock wise*/
void motorACW_callback(void){
	/*Disable Timer
	 *Clear Lcd screen
	 *Call main Options screen
	 * */
	Timer1_deInit();
	LCD_clearScreen();
	MainOptions();
}
/*Buzzer Callback function */
void Buzzer_Callback(void){
	/*Disactivate timer
	 *return to main options
	 * */
	Timer1_deInit();
	MainOptions();
}
